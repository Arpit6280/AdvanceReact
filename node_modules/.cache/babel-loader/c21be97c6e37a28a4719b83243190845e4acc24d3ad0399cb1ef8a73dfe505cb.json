{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arpit\\\\Documents\\\\SharpnerReact3\\\\myapp\\\\src\\\\components\\\\Login\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useReducer, useState } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    };\n  }\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    };\n  }\n  return {\n    value: '',\n    isValid: false\n  };\n};\nconst passwordReducer = (state, action) => {\n  if (action.type === 'USER_PASSWORD') {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 6\n    };\n  }\n  return {\n    value: '',\n    isValid: false\n  };\n};\nconst Login = props => {\n  _s();\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [enteredCollege, setEnteredCollege] = useState('');\n  const [collegeIsvalid, setcollegeIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: null\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: null\n  });\n\n  //  useEffect(()=>{\n  //  const interval= setTimeout(()=>{\n  //     console.log('hi');\n  //     setFormIsValid(\n  //     enteredEmail.includes('@') && enteredPassword.trim().length>6 && enteredCollege.trim().length>2 );\n  //   },2000)\n\n  //   return ()=>{\n  //     console.log('clean up');\n  // clearInterval(interval)\n  //   }\n\n  //  },[enteredEmail,enteredPassword,enteredCollege])\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    });\n    setFormIsValid(emailState.value.includes('@') && enteredPassword.trim().length > 6 && enteredCollege.trim().length > 2);\n  };\n  const passwordChangeHandler = event => {\n    dispatchPassword({\n      type: 'USER_PASSWORD',\n      val: event.target.value\n    });\n    setFormIsValid(emailState.isValid && passwordState.isValid && enteredCollege.trim().length > 2);\n  };\n  const collegeChangeHandler = event => {\n    setEnteredCollege(event.target.value);\n  };\n  const validateEmailHandler = () => {\n    // setEmailIsValid(emailState.isValid);\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    });\n  };\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n  const validateCollegeHandler = () => {\n    setcollegeIsValid(enteredCollege.trim().length > 2);\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, enteredPassword, enteredCollege);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.value === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: enteredPassword,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${collegeIsvalid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"college\",\n          children: \"College Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"text\",\n          value: enteredCollege,\n          onChange: collegeChangeHandler,\n          onBlur: validateCollegeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"smqbbjbiMhbc7iLZt+xasKKSjhU=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","useReducer","useState","Card","classes","Button","jsxDEV","_jsxDEV","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","length","Login","props","_s","enteredPassword","setEnteredPassword","passwordIsValid","setPasswordIsValid","enteredCollege","setEnteredCollege","collegeIsvalid","setcollegeIsValid","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","emailChangeHandler","event","target","passwordChangeHandler","collegeChangeHandler","validateEmailHandler","validatePasswordHandler","validateCollegeHandler","submitHandler","preventDefault","onLogin","className","login","children","onSubmit","control","invalid","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","onBlur","actions","btn","disabled","_c","$RefreshReg$"],"sources":["C:/Users/arpit/Documents/SharpnerReact3/myapp/src/components/Login/Login.js"],"sourcesContent":["import React, { useEffect, useReducer, useState } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n\nconst emailReducer=(state,action)=>{\n  if(action.type==='USER_INPUT'){\n    return {value:action.val, isValid:action.val.includes('@')}\n  }\n  if(action.type==='INPUT_BLUR'){\n    return { value:state.value, isValid:state.value.includes('@')}\n  }\n  return {value:'', isValid:false}\n}\n\nconst passwordReducer =(state,action)=>{\n    if(action.type==='USER_PASSWORD'){\n       return {value:action.val, isValid:action.val.trim().length>6}\n    }\n\n    return {value:'', isValid:false}\n}\n\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [enteredCollege,setEnteredCollege]=useState('');\n  const [collegeIsvalid,setcollegeIsValid]=useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail]=useReducer(emailReducer,{\n    value:'', isValid:null\n  })\n\n  const [passwordState,dispatchPassword]=useReducer(passwordReducer,{value:'',isValid:null})\n\n\n  //  useEffect(()=>{\n  //  const interval= setTimeout(()=>{\n  //     console.log('hi');\n  //     setFormIsValid(\n  //     enteredEmail.includes('@') && enteredPassword.trim().length>6 && enteredCollege.trim().length>2 );\n  //   },2000)\n\n  //   return ()=>{\n  //     console.log('clean up');\n  // clearInterval(interval)\n  //   }\n\n  //  },[enteredEmail,enteredPassword,enteredCollege])\n  \n\n  \n   const emailChangeHandler = (event) => {\n    dispatchEmail({type:'USER_INPUT', val:event.target.value})\n    setFormIsValid(\n    emailState.value.includes('@') && enteredPassword.trim().length>6 && enteredCollege.trim().length>2 );\n\n  };\n\n  const passwordChangeHandler = (event) => {\n   dispatchPassword({type:'USER_PASSWORD', val:event.target.value})\n    setFormIsValid(emailState.isValid && passwordState.isValid && enteredCollege.trim().length>2 );\n  };\n\n  const collegeChangeHandler=(event)=>{\n    setEnteredCollege(event.target.value)\n  }\n\n  const validateEmailHandler = () => {\n    // setEmailIsValid(emailState.isValid);\n    dispatchEmail({\n      type:'INPUT_BLUR'\n    })\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const validateCollegeHandler=()=>{\n    setcollegeIsValid(enteredCollege.trim().length > 2);\n  }\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, enteredPassword,enteredCollege);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.value === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={enteredPassword}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            collegeIsvalid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"college\">College Name</label>\n          <input\n            type=\"text\"\n            id=\"text\"\n            value={enteredCollege}\n            onChange={collegeChangeHandler}\n            onBlur={validateCollegeHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}