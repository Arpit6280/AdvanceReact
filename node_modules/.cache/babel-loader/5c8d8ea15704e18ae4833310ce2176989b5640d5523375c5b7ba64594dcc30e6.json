{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arpit\\\\Documents\\\\SharpnerReact3\\\\myapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthContext from './components/context/auth-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const storedUserLoggedInformation = localStorage.getItem('isLoggedIn');\n    if (storedUserLoggedInformation === '1') {\n      setIsLoggedIn(true);\n    }\n  }, []);\n  const loginHandler = (email, password, college) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem('isLoggedIn', '1');\n    setIsLoggedIn(true);\n  };\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn\n    },\n    children: [/*#__PURE__*/_jsxDEV(MainHeader, {\n      onLogout: logoutHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: loginHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {\n        onLogout: logoutHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Login","Home","MainHeader","AuthContext","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","storedUserLoggedInformation","localStorage","getItem","loginHandler","email","password","college","setItem","logoutHandler","removeItem","Provider","value","children","onLogout","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","_c","$RefreshReg$"],"sources":["C:/Users/arpit/Documents/SharpnerReact3/myapp/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthContext from './components/context/auth-context';\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n\n   useEffect(()=>{\n    const storedUserLoggedInformation=localStorage.getItem('isLoggedIn');\n\n    if(storedUserLoggedInformation === '1'){\n      setIsLoggedIn(true);\n    }\n   },[])\n  const loginHandler = (email, password,college) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem('isLoggedIn','1');\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn')\n    setIsLoggedIn(false);\n  };\n\n  return (\n      <AuthContext.Provider \n      value={{\n        isLoggedIn:isLoggedIn,\n      }}\n      >\n      <MainHeader onLogout={logoutHandler} />\n      <main>\n        {!isLoggedIn && <Login onLogin={loginHandler} />}\n        {isLoggedIn && <Home onLogout={logoutHandler} />}\n      </main>\n      </AuthContext.Provider>\n\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,WAAW,MAAM,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAGlDD,SAAS,CAAC,MAAI;IACb,MAAMY,2BAA2B,GAACC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IAEpE,IAAGF,2BAA2B,KAAK,GAAG,EAAC;MACrCD,aAAa,CAAC,IAAI,CAAC;IACrB;EACD,CAAC,EAAC,EAAE,CAAC;EACN,MAAMI,YAAY,GAAGA,CAACC,KAAK,EAAEC,QAAQ,EAACC,OAAO,KAAK;IAChD;IACA;IACAL,YAAY,CAACM,OAAO,CAAC,YAAY,EAAC,GAAG,CAAC;IACtCR,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,MAAMS,aAAa,GAAGA,CAAA,KAAM;IAC1BP,YAAY,CAACQ,UAAU,CAAC,YAAY,CAAC;IACrCV,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,oBACIJ,OAAA,CAACF,WAAW,CAACiB,QAAQ;IACrBC,KAAK,EAAE;MACLb,UAAU,EAACA;IACb,CAAE;IAAAc,QAAA,gBAEFjB,OAAA,CAACH,UAAU;MAACqB,QAAQ,EAAEL;IAAc;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvCtB,OAAA;MAAAiB,QAAA,GACG,CAACd,UAAU,iBAAIH,OAAA,CAACL,KAAK;QAAC4B,OAAO,EAAEf;MAAa;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC/CnB,UAAU,iBAAIH,OAAA,CAACJ,IAAI;QAACsB,QAAQ,EAAEL;MAAc;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAG7B;AAACpB,EAAA,CArCQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAuCZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}