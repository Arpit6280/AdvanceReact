{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arpit\\\\Documents\\\\SharpnerReact3\\\\myapp\\\\src\\\\components\\\\context\\\\auth-context.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  isLoggedIn: false,\n  onLogout: () => {},\n  onLogin: () => {}\n});\nconst AuthContextProvider = props => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n  };\n  const loginHandler = () => {\n    setIsLoggedIn(true);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      onLogout: logoutHandler,\n      onLogin: loginHandler\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 13\n  }, this);\n};\n_s(AuthContextProvider, \"KevDNrCXvtsbrnrIN4+rjR7PIn4=\");\n_c = AuthContextProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AuthContext","createContext","isLoggedIn","onLogout","onLogin","AuthContextProvider","props","_s","setIsLoggedIn","logoutHandler","loginHandler","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/arpit/Documents/SharpnerReact3/myapp/src/components/context/auth-context.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst AuthContext=React.createContext({\r\n    isLoggedIn:false,\r\n    onLogout:()=>{},\r\n    onLogin:()=>{}\r\n})\r\n\r\nconst AuthContextProvider=(props)=>{\r\n    const [isLoggedIn,setIsLoggedIn]=useState(false)\r\n\r\n     const logoutHandler=()=>{\r\n        setIsLoggedIn(false)\r\n     }\r\n\r\n     const loginHandler=()=>{\r\n        setIsLoggedIn(true);\r\n     }\r\n\r\n     return <AuthContext.Provider value={{isLoggedIn:isLoggedIn,onLogout:logoutHandler,onLogin:loginHandler}}></AuthContext.Provider>\r\n}\r\n\r\n\r\nexport default AuthContext;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,WAAW,gBAACJ,KAAK,CAACK,aAAa,CAAC;EAClCC,UAAU,EAAC,KAAK;EAChBC,QAAQ,EAACA,CAAA,KAAI,CAAC,CAAC;EACfC,OAAO,EAACA,CAAA,KAAI,CAAC;AACjB,CAAC,CAAC;AAEF,MAAMC,mBAAmB,GAAEC,KAAK,IAAG;EAAAC,EAAA;EAC/B,MAAM,CAACL,UAAU,EAACM,aAAa,CAAC,GAACX,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMY,aAAa,GAACA,CAAA,KAAI;IACrBD,aAAa,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,MAAME,YAAY,GAACA,CAAA,KAAI;IACpBF,aAAa,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,oBAAOT,OAAA,CAACC,WAAW,CAACW,QAAQ;IAACC,KAAK,EAAE;MAACV,UAAU,EAACA,UAAU;MAACC,QAAQ,EAACM,aAAa;MAACL,OAAO,EAACM;IAAY;EAAE;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AACrI,CAAC;AAAAT,EAAA,CAZKF,mBAAmB;AAAAY,EAAA,GAAnBZ,mBAAmB;AAezB,eAAeL,WAAW;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}